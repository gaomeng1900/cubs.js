var L=Object.defineProperty;var f=(s,e,t)=>e in s?L(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var v=(s,e,t)=>(f(s,typeof e!="symbol"?e+"":e,t),t);import{R as X,a as j,r as w,d as y}from"./Test.module-3cb5013e.js";class M extends X{constructor(t,i){super();v(this,"xStart",0);v(this,"xEnd",50);this.coordinator=t,this.config=i;const p=Math.random(),{color:E=w(.2,p)}=i||{},{min:x=-1/0,max:r=1/0}=i||{};this.style.fillStyle=E;const n=new j;n.style.zIndex=5,n.style.lineWidth=5,n.style.strokeStyle=w(.9,p),n.hoverStyle.strokeStyle=w(1,p+.5),this.add(n);const h=new j;h.style.zIndex=5,h.style.lineWidth=5,h.style.strokeStyle=w(.9,p),h.hoverStyle.strokeStyle=w(1,p+.5),this.add(h),this.addEventListener("beforeRender",d=>{this.y=t.top,this.height=t.viewportHeight,this.x=t.project(this.xStart,0)[0],this.width=t.project(this.xEnd,0)[0]-this.x,n.x=0-(n.style.lineWidth||1)/2,n.y=0,n.dx=0,n.dy=t.viewportHeight,h.x=this.width+(n.style.lineWidth||1)/2,h.y=0,h.dx=0,h.dy=t.viewportHeight}),i!=null&&i.draggable&&(y(this,d=>{if(this.xStart=t.unproject(d.x,0)[0],this.xEnd=t.unproject(d.x+this.width,0)[0],this.xStart<x){const l=this.xEnd-this.xStart;this.xStart=x,this.xEnd=x+l,d.x=t.project(x,0)[0]}if(this.xEnd>r){const l=this.xEnd-this.xStart;this.xEnd=r,this.xStart=r-l,d.x=t.project(r,0)[0]}}),y(n,d=>{this.x=t.project(this.xStart,0)[0],this.x+=d.dx,this.width-=d.dx,this.width<0&&(this.width=0),this.xStart=t.unproject(this.x,0)[0],this.xEnd=t.unproject(this.x+this.width,0)[0]},()=>{this.xStart=Math.min(Math.max(this.xStart,x),r),this.xEnd=Math.min(Math.max(this.xEnd,x),r),this.x=t.project(this.xStart,0)[0],this.width=t.project(this.xEnd,0)[0]-this.x}),y(h,d=>{this.width+=d.dx,this.width<0&&(this.width=0),this.xEnd=t.unproject(this.x+this.width,0)[0]},()=>{this.xStart=Math.min(Math.max(this.xStart,x),r),this.xEnd=Math.min(Math.max(this.xEnd,x),r),this.x=t.project(this.xStart,0)[0],this.width=t.project(this.xEnd,0)[0]-this.x}))}}function b(s,e,t){let i;const p=E=>{const x=E.srcEvent;if(x.button!==0||E.target!==E.currentTarget)return;x.preventDefault();const{left:r,top:n}=s.canvas.getBoundingClientRect()||{left:0,top:0},h=x.clientX-r,d=x.clientY-n;if(e.viewportX>h||e.viewportX+e.viewportWidth<h||e.viewportY>d||e.viewportY+e.viewportHeight<d)return;i=new M(e),s.add(i),i.xStart=e.unproject(h,0)[0],i.xEnd=e.unproject(h,0)[0];const l=u=>{const S=u.srcEvent.clientX-r;i.xEnd=e.unproject(S,0)[0],e.dispatchEvent({type:"update"})},m=u=>{s.removeEventListener("pointermove",l),s.removeEventListener("pointerup",m),s.remove(i);const a=new M(e,t);if(a.xStart=i.xStart,a.xEnd=i.xEnd,a.xStart>a.xEnd){const S=a.xStart;a.xStart=a.xEnd,a.xEnd=S}s.add(a),t!=null&&t.onAdd&&t.onAdd(a)};s.addEventListener("pointermove",l),s.addEventListener("pointerup",m)};return s.addEventListener("pointerdown",p),()=>{s.removeEventListener("pointerdown",p),i&&s.children.has(i)&&s.remove(i)}}export{M as X,b as d};
